var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":469,"id":4653,"methods":[{"el":315,"sc":2,"sl":315},{"el":316,"sc":2,"sl":316},{"el":317,"sc":2,"sl":317},{"el":318,"sc":2,"sl":318},{"el":338,"sc":2,"sl":338},{"el":339,"sc":2,"sl":339},{"el":340,"sc":2,"sl":340},{"el":341,"sc":2,"sl":341},{"el":342,"sc":2,"sl":342},{"el":97,"sc":2,"sl":79},{"el":419,"sc":2,"sl":414},{"el":425,"sc":2,"sl":421},{"el":431,"sc":2,"sl":427},{"el":437,"sc":2,"sl":433},{"el":466,"sc":2,"sl":439},{"el":72,"sc":2,"sl":72},{"el":72,"sc":2,"sl":72},{"el":73,"sc":2,"sl":73},{"el":73,"sc":2,"sl":73},{"el":75,"sc":2,"sl":75},{"el":75,"sc":2,"sl":75},{"el":76,"sc":2,"sl":76},{"el":76,"sc":2,"sl":76},{"el":118,"sc":2,"sl":99},{"el":132,"sc":2,"sl":121},{"el":144,"sc":2,"sl":134},{"el":191,"sc":2,"sl":154},{"el":230,"sc":2,"sl":194},{"el":240,"sc":2,"sl":232},{"el":252,"sc":2,"sl":242},{"el":258,"sc":2,"sl":254},{"el":264,"sc":2,"sl":260},{"el":274,"sc":2,"sl":266},{"el":283,"sc":2,"sl":276},{"el":301,"sc":2,"sl":285},{"el":313,"sc":2,"sl":303},{"el":336,"sc":2,"sl":319},{"el":354,"sc":2,"sl":344},{"el":366,"sc":2,"sl":356},{"el":371,"sc":2,"sl":368},{"el":385,"sc":2,"sl":373},{"el":410,"sc":2,"sl":388}],"name":"DefaultCryptoManagerSpec","sl":70}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":72},{"sl":356}],"name":"Verify findSignatureInMessage throws exception if no signature element was found.","pass":true,"statements":[{"sl":358},{"sl":360},{"sl":362},{"sl":364}]},"test_118":{"methods":[{"sl":72},{"sl":99}],"name":"Test to generate ECDSA Signature and then verify the signature for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":111},{"sl":112},{"sl":114}]},"test_119":{"methods":[{"sl":72},{"sl":319}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_1 ecc point","pass":true,"statements":[{"sl":322},{"sl":323},{"sl":325},{"sl":326},{"sl":328}]},"test_137":{"methods":[{"sl":72},{"sl":266}],"name":"Verify that getECCurve getECParameterSpec returns curve with name: P-256 for public key algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":269}]},"test_146":{"methods":[{"sl":72},{"sl":154},{"sl":414}],"name":"Verify that encodeEccPoint encodes ec public keys properly for algorithm: ecies_nistp256","pass":true,"statements":[{"sl":157},{"sl":159},{"sl":160},{"sl":161},{"sl":163},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":173},{"sl":175},{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":182},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":415},{"sl":416},{"sl":417},{"sl":418}]},"test_173":{"methods":[{"sl":72},{"sl":75},{"sl":76},{"sl":388},{"sl":433},{"sl":439}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":392},{"sl":393},{"sl":395},{"sl":397},{"sl":399},{"sl":402},{"sl":405},{"sl":434},{"sl":435},{"sl":436},{"sl":440},{"sl":444},{"sl":445},{"sl":446},{"sl":447},{"sl":448},{"sl":458},{"sl":459},{"sl":462},{"sl":465}]},"test_187":{"methods":[{"sl":72},{"sl":154},{"sl":414}],"name":"Verify that encodeEccPoint encodes ec public keys properly for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":157},{"sl":159},{"sl":160},{"sl":161},{"sl":163},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":173},{"sl":175},{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":182},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":415},{"sl":416},{"sl":417},{"sl":418}]},"test_209":{"methods":[{"sl":72},{"sl":134}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecies_nistp256","pass":true,"statements":[{"sl":137},{"sl":138},{"sl":140},{"sl":141}]},"test_217":{"methods":[{"sl":72},{"sl":344}],"name":"Verify serializeTotalPayload calculates signature payload fields correctly","pass":true,"statements":[{"sl":346},{"sl":347},{"sl":349},{"sl":350},{"sl":352}]},"test_225":{"methods":[{"sl":72},{"sl":194}],"name":"Verify that decodeEccPoint decodes the EccPoints correctly for public key scheme: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":197},{"sl":198},{"sl":200},{"sl":201},{"sl":204},{"sl":205},{"sl":208},{"sl":209},{"sl":212},{"sl":213},{"sl":216},{"sl":217},{"sl":220},{"sl":221},{"sl":224},{"sl":225}]},"test_238":{"methods":[{"sl":72},{"sl":285}],"name":"Verify calculateSignatureLength for public algorithm ecdsa_nistp256_with_sha256 and R EccPointType x_coordinate_only","pass":true,"statements":[{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":294}]},"test_241":{"methods":[{"sl":72},{"sl":232}],"name":"Verify digest generates a correct digest for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":235}]},"test_256":{"methods":[{"sl":72},{"sl":266}],"name":"Verify that getECCurve getECParameterSpec returns curve with name: P-256 for public key algorithm: ecies_nistp256","pass":true,"statements":[{"sl":269}]},"test_273":{"methods":[{"sl":72},{"sl":254},{"sl":427},{"sl":433}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":256},{"sl":257},{"sl":428},{"sl":429},{"sl":430},{"sl":434},{"sl":435},{"sl":436}]},"test_277":{"methods":[{"sl":72},{"sl":242},{"sl":427},{"sl":433}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":244},{"sl":245},{"sl":246},{"sl":247},{"sl":249},{"sl":251},{"sl":428},{"sl":429},{"sl":430},{"sl":434},{"sl":435},{"sl":436}]},"test_290":{"methods":[{"sl":72},{"sl":373}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":375},{"sl":376},{"sl":377},{"sl":378},{"sl":379},{"sl":380},{"sl":382},{"sl":384}]},"test_292":{"methods":[{"sl":72},{"sl":285}],"name":"Verify calculateSignatureLength for public algorithm ecdsa_nistp256_with_sha256 and R EccPointType compressed_lsb_y_1","pass":true,"statements":[{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":294}]},"test_297":{"methods":[{"sl":72},{"sl":194}],"name":"Verify that decodeEccPoint decodes the EccPoints correctly for public key scheme: ecies_nistp256","pass":true,"statements":[{"sl":197},{"sl":198},{"sl":200},{"sl":201},{"sl":204},{"sl":205},{"sl":208},{"sl":209},{"sl":212},{"sl":213},{"sl":216},{"sl":217},{"sl":220},{"sl":221},{"sl":224},{"sl":225}]},"test_322":{"methods":[{"sl":72},{"sl":260}],"name":"Verify that getECCurve returns correct curve","pass":true,"statements":[{"sl":262},{"sl":263}]},"test_342":{"methods":[{"sl":72},{"sl":368}],"name":"Verify findSignatureInMessage returns first found signature trailer field","pass":true,"statements":[{"sl":370}]},"test_346":{"methods":[{"sl":72},{"sl":134}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":137},{"sl":138},{"sl":140},{"sl":141}]},"test_353":{"methods":[{"sl":72},{"sl":73},{"sl":276}],"name":"Verify that convertECPublicKeyToBCECPublicKey supports both BC and SUN Public keys","pass":true,"statements":[{"sl":278},{"sl":280}]},"test_392":{"methods":[{"sl":72},{"sl":303}],"name":"Verify calculateSignatureLength throws exception for #pubAlg","pass":true,"statements":[{"sl":305},{"sl":306},{"sl":308},{"sl":310}]},"test_42":{"methods":[{"sl":72},{"sl":285}],"name":"Verify calculateSignatureLength for public algorithm ecdsa_nistp256_with_sha256 and R EccPointType compressed_lsb_y_0","pass":true,"statements":[{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":294}]},"test_50":{"methods":[{"sl":72},{"sl":285}],"name":"Verify calculateSignatureLength for public algorithm ecdsa_nistp256_with_sha256 and R EccPointType uncompressed","pass":true,"statements":[{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":294}]},"test_61":{"methods":[{"sl":72},{"sl":319}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_0 ecc point","pass":true,"statements":[{"sl":322},{"sl":323},{"sl":325},{"sl":326},{"sl":328}]},"test_66":{"methods":[{"sl":72},{"sl":75},{"sl":76},{"sl":388},{"sl":433},{"sl":439}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":392},{"sl":393},{"sl":395},{"sl":397},{"sl":399},{"sl":400},{"sl":405},{"sl":434},{"sl":435},{"sl":436},{"sl":440},{"sl":444},{"sl":445},{"sl":446},{"sl":447},{"sl":448},{"sl":458},{"sl":459},{"sl":462},{"sl":465}]},"test_71":{"methods":[{"sl":72},{"sl":319}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly no signature trailer field","pass":true,"statements":[{"sl":322},{"sl":323},{"sl":325},{"sl":326},{"sl":328}]},"test_72":{"methods":[{"sl":72},{"sl":319}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with x_coordinate_only ecc point","pass":true,"statements":[{"sl":322},{"sl":323},{"sl":325},{"sl":326},{"sl":328}]},"test_78":{"methods":[{"sl":72},{"sl":121},{"sl":421},{"sl":427},{"sl":433}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":123},{"sl":124},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":422},{"sl":423},{"sl":424},{"sl":428},{"sl":429},{"sl":430},{"sl":434},{"sl":435},{"sl":436}]},"test_84":{"methods":[{"sl":72},{"sl":319}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with uncompressed ecc point","pass":true,"statements":[{"sl":322},{"sl":323},{"sl":325},{"sl":326},{"sl":328}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [238, 241, 256, 137, 277, 119, 342, 118, 217, 297, 273, 353, 173, 84, 72, 66, 209, 290, 42, 78, 225, 322, 0, 187, 61, 71, 50, 292, 346, 146, 392], [353], [], [173, 66], [173, 66], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [118], [], [], [118], [118], [118], [118], [], [], [], [], [], [118], [118], [], [118], [], [], [], [], [], [], [78], [], [78], [78], [78], [78], [78], [78], [78], [], [], [], [], [209, 346], [], [], [209, 346], [209, 346], [], [209, 346], [209, 346], [], [], [], [], [], [], [], [], [], [], [], [], [187, 146], [], [], [187, 146], [], [187, 146], [187, 146], [187, 146], [], [187, 146], [], [187, 146], [187, 146], [187, 146], [187, 146], [187, 146], [], [], [], [187, 146], [], [187, 146], [187, 146], [187, 146], [187, 146], [187, 146], [], [], [187, 146], [], [187, 146], [187, 146], [187, 146], [187, 146], [], [], [], [], [], [], [297, 225], [], [], [297, 225], [297, 225], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [297, 225], [297, 225], [], [], [], [], [], [], [241], [], [], [241], [], [], [], [], [], [], [277], [], [277], [277], [277], [277], [], [277], [], [277], [], [], [273], [], [273], [273], [], [], [322], [], [322], [322], [], [], [256, 137], [], [], [256, 137], [], [], [], [], [], [], [353], [], [353], [], [353], [], [], [], [], [238, 42, 50, 292], [], [], [238, 42, 50, 292], [238, 42, 50, 292], [238, 42, 50, 292], [238, 42, 50, 292], [238, 42, 50, 292], [], [238, 42, 50, 292], [], [], [], [], [], [], [], [], [392], [], [392], [392], [], [392], [], [392], [], [], [], [], [], [], [], [], [119, 84, 72, 61, 71], [], [], [119, 84, 72, 61, 71], [119, 84, 72, 61, 71], [], [119, 84, 72, 61, 71], [119, 84, 72, 61, 71], [], [119, 84, 72, 61, 71], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [217], [], [217], [217], [], [217], [217], [], [217], [], [], [], [0], [], [0], [], [0], [], [0], [], [0], [], [], [], [342], [], [342], [], [], [290], [], [290], [290], [290], [290], [290], [290], [], [290], [], [290], [], [], [], [173, 66], [], [], [], [173, 66], [173, 66], [], [173, 66], [], [173, 66], [], [173, 66], [66], [], [173], [], [], [173, 66], [], [], [], [], [], [], [], [], [187, 146], [187, 146], [187, 146], [187, 146], [187, 146], [], [], [78], [78], [78], [78], [], [], [277, 273, 78], [277, 273, 78], [277, 273, 78], [277, 273, 78], [], [], [277, 273, 173, 66, 78], [277, 273, 173, 66, 78], [277, 273, 173, 66, 78], [277, 273, 173, 66, 78], [], [], [173, 66], [173, 66], [], [], [], [173, 66], [173, 66], [173, 66], [173, 66], [173, 66], [], [], [], [], [], [], [], [], [], [173, 66], [173, 66], [], [], [173, 66], [], [], [173, 66], [], [], [], [], []]
