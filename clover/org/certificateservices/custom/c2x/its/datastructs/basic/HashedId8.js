var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":57,"id":938,"methods":[{"el":34,"sc":2,"sl":32},{"el":42,"sc":2,"sl":40},{"el":50,"sc":2,"sl":47},{"el":55,"sc":2,"sl":52}],"name":"HashedId8","sl":25}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":32},{"sl":47}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_122":{"methods":[{"sl":32},{"sl":47}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_129":{"methods":[{"sl":40},{"sl":47}],"name":"Verify deserialization","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_144":{"methods":[{"sl":32},{"sl":47}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_145":{"methods":[{"sl":40},{"sl":47}],"name":"Verify deserialization","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_15":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54}]},"test_173":{"methods":[{"sl":40},{"sl":47}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_184":{"methods":[{"sl":40},{"sl":47}],"name":"Verify deserialization","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_185":{"methods":[{"sl":32},{"sl":47}],"name":"Verify the correct octet length of the HashedId3","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_235":{"methods":[{"sl":40},{"sl":47}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_269":{"methods":[{"sl":32},{"sl":47},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":33},{"sl":49},{"sl":54}]},"test_273":{"methods":[{"sl":40},{"sl":47}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_277":{"methods":[{"sl":40},{"sl":47}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_280":{"methods":[{"sl":40},{"sl":47}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_337":{"methods":[{"sl":32},{"sl":47}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_348":{"methods":[{"sl":47}],"name":"Verify IllegalArgumentException is thrown if to small hash value is given.","pass":true,"statements":[{"sl":49}]},"test_357":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54}]},"test_373":{"methods":[{"sl":40},{"sl":47}],"name":"Verify the correct octet length of the HashedId8","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_387":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54}]},"test_51":{"methods":[{"sl":32},{"sl":47}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":33},{"sl":49}]},"test_66":{"methods":[{"sl":40},{"sl":47}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_73":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54}]},"test_78":{"methods":[{"sl":40},{"sl":47}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":41},{"sl":49}]},"test_99":{"methods":[{"sl":32},{"sl":47}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":33},{"sl":49}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [122, 99, 185, 269, 337, 144, 102, 51], [122, 99, 185, 269, 337, 144, 102, 51], [], [], [], [], [], [], [129, 184, 277, 273, 373, 173, 235, 66, 145, 78, 280], [129, 184, 277, 273, 373, 173, 235, 66, 145, 78, 280], [], [], [], [], [], [129, 184, 348, 277, 122, 273, 99, 373, 173, 185, 235, 66, 269, 145, 78, 280, 337, 144, 102, 51], [], [129, 184, 348, 277, 122, 273, 99, 373, 173, 185, 235, 66, 269, 145, 78, 280, 337, 144, 102, 51], [], [], [357, 387, 15, 269, 73], [], [357, 387, 15, 269, 73], [], [], []]
