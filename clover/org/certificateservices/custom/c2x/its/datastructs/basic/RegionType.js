var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":63,"id":1335,"methods":[{"el":45,"sc":2,"sl":43},{"el":49,"sc":2,"sl":47},{"el":61,"sc":2,"sl":54}],"name":"RegionType","sl":34}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_104":{"methods":[{"sl":54}],"name":"Verify that RegionType.getByValue returns rectangle for 2","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_107":{"methods":[{"sl":47}],"name":"Verify serialization","pass":true,"statements":[{"sl":48}]},"test_112":{"methods":[{"sl":47}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":48}]},"test_126":{"methods":[{"sl":47}],"name":"Verify that id has bytevalue 4","pass":true,"statements":[{"sl":48}]},"test_132":{"methods":[{"sl":47}],"name":"Verify that polygon has bytevalue 3","pass":true,"statements":[{"sl":48}]},"test_166":{"methods":[{"sl":47}],"name":"Verify that circle has bytevalue 1","pass":true,"statements":[{"sl":48}]},"test_173":{"methods":[{"sl":54}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_235":{"methods":[{"sl":47},{"sl":54}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":48},{"sl":55},{"sl":56},{"sl":57}]},"test_244":{"methods":[{"sl":54}],"name":"Verify deserialization","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_273":{"methods":[{"sl":47},{"sl":54}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":48},{"sl":55},{"sl":56},{"sl":57}]},"test_277":{"methods":[{"sl":54}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_299":{"methods":[{"sl":47}],"name":"Verify that rectangle has bytevalue 2","pass":true,"statements":[{"sl":48}]},"test_313":{"methods":[{"sl":54}],"name":"Verify that RegionType.getByValue returns polygon for 3","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_336":{"methods":[{"sl":47}],"name":"Verify that none has bytevalue 0","pass":true,"statements":[{"sl":48}]},"test_34":{"methods":[{"sl":54}],"name":"Verify that RegionType.getByValue returns circle for 1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_393":{"methods":[{"sl":54}],"name":"Verify that RegionType.getByValue returns none for 0","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_43":{"methods":[{"sl":47}],"name":"Verify serialization","pass":true,"statements":[{"sl":48}]},"test_49":{"methods":[{"sl":54}],"name":"Verify deserialization","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_66":{"methods":[{"sl":54}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]},"test_78":{"methods":[{"sl":47},{"sl":54}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":48},{"sl":55},{"sl":56},{"sl":57}]},"test_91":{"methods":[{"sl":54}],"name":"Verify that RegionType.getByValue returns id for 4","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [166, 336, 273, 235, 43, 107, 112, 132, 126, 299, 78], [166, 336, 273, 235, 43, 107, 112, 132, 126, 299, 78], [], [], [], [], [], [277, 393, 273, 235, 49, 104, 244, 313, 173, 66, 78, 91, 34], [277, 393, 273, 235, 49, 104, 244, 313, 173, 66, 78, 91, 34], [277, 393, 273, 235, 49, 104, 244, 313, 173, 66, 78, 91, 34], [277, 393, 273, 235, 49, 104, 244, 313, 173, 66, 78, 91, 34], [], [], [], [], [], []]
