var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":104,"id":3399,"methods":[{"el":37,"sc":2,"sl":31},{"el":49,"sc":2,"sl":39},{"el":60,"sc":2,"sl":52},{"el":70,"sc":2,"sl":62},{"el":82,"sc":2,"sl":72},{"el":97,"sc":2,"sl":84},{"el":102,"sc":2,"sl":99}],"name":"SubjectAssuranceSpec","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_148":{"methods":[{"sl":39}],"name":"Verify that #Error:subjectAssurance calculates a byte value of: 1 for assuranceLevel: 0 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_161":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[2]","pass":true,"statements":[{"sl":75}]},"test_174":{"methods":[{"sl":39}],"name":"Verify that #Error:subjectAssurance calculates a byte value of: 227 for assuranceLevel: 7 and confidenceLevel: 3","pass":true,"statements":[{"sl":42}]},"test_236":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[1]","pass":true,"statements":[{"sl":75}]},"test_271":{"methods":[{"sl":52}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: -1","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_283":{"methods":[{"sl":52}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 8","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_295":{"methods":[{"sl":62}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: -1","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_320":{"methods":[{"sl":62}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 4","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_341":{"methods":[{"sl":39}],"name":"Verify that #Error:subjectAssurance calculates a byte value of: 0 for assuranceLevel: 0 and confidenceLevel: 0","pass":true,"statements":[{"sl":42}]},"test_376":{"methods":[{"sl":84}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":91},{"sl":92},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_383":{"methods":[{"sl":31}],"name":"Verify getAssurranceLevel and getConfidence","pass":true,"statements":[{"sl":33},{"sl":34},{"sl":35},{"sl":36}]},"test_48":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[0]","pass":true,"statements":[{"sl":75}]},"test_60":{"methods":[{"sl":62}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 10","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_64":{"methods":[{"sl":52}],"name":"Verify that #Error:subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 10","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_77":{"methods":[{"sl":39}],"name":"Verify that #Error:subjectAssurance calculates a byte value of: 33 for assuranceLevel: 1 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_94":{"methods":[{"sl":99}],"name":"Verify toString","pass":true,"statements":[{"sl":101}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [383], [], [383], [383], [383], [383], [], [], [148, 341, 77, 174], [], [], [148, 341, 77, 174], [], [], [], [], [], [], [], [], [], [283, 271, 64], [], [], [283, 271, 64], [], [283, 271, 64], [], [], [], [], [320, 60, 295], [], [], [320, 60, 295], [], [320, 60, 295], [], [], [], [], [161, 236, 48], [], [], [161, 236, 48], [], [], [], [], [], [], [], [], [376], [], [376], [376], [376], [376], [], [376], [376], [376], [376], [376], [376], [], [], [94], [], [94], [], [], []]
