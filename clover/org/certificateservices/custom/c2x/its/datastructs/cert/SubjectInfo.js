var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":124,"id":2311,"methods":[{"el":53,"sc":2,"sl":43},{"el":58,"sc":2,"sl":58},{"el":66,"sc":2,"sl":64},{"el":75,"sc":2,"sl":73},{"el":82,"sc":2,"sl":77},{"el":90,"sc":2,"sl":84},{"el":100,"sc":2,"sl":92},{"el":116,"sc":2,"sl":102},{"el":122,"sc":2,"sl":118}],"name":"SubjectInfo","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":77}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_112":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_122":{"methods":[{"sl":77}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_125":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_142":{"methods":[{"sl":77}],"name":"Verify serialization of SubjectInfo","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_144":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":46},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_149":{"methods":[{"sl":77}],"name":"Verify serialization","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_173":{"methods":[{"sl":58},{"sl":77},{"sl":84}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_175":{"methods":[{"sl":118}],"name":"Verify toString","pass":true,"statements":[{"sl":120}]},"test_181":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":46},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_184":{"methods":[{"sl":58},{"sl":84}],"name":"Verify deserialization","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_21":{"methods":[{"sl":118}],"name":"Verify toString","pass":true,"statements":[{"sl":120}]},"test_226":{"methods":[{"sl":43},{"sl":92},{"sl":102}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":99},{"sl":104},{"sl":106},{"sl":108},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":114},{"sl":115}]},"test_230":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_235":{"methods":[{"sl":58},{"sl":77},{"sl":84}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_237":{"methods":[{"sl":64}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":65}]},"test_242":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_25":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_273":{"methods":[{"sl":58},{"sl":77},{"sl":84}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_277":{"methods":[{"sl":58},{"sl":84}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_306":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_323":{"methods":[{"sl":77}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_360":{"methods":[{"sl":43},{"sl":64},{"sl":73}],"name":"Verify constructors and getters and setters","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":49},{"sl":65},{"sl":74}]},"test_38":{"methods":[{"sl":58},{"sl":64},{"sl":73},{"sl":84}],"name":"Verify deserialization ofSignature","pass":true,"statements":[{"sl":65},{"sl":74},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_40":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":46},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_47":{"methods":[{"sl":77}],"name":"Verify serialization","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]},"test_51":{"methods":[{"sl":43},{"sl":64},{"sl":73},{"sl":77}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":48},{"sl":51},{"sl":65},{"sl":74},{"sl":79},{"sl":80},{"sl":81}]},"test_54":{"methods":[{"sl":58},{"sl":64},{"sl":84}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_66":{"methods":[{"sl":58},{"sl":77},{"sl":84}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_78":{"methods":[{"sl":58},{"sl":77},{"sl":84}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":86},{"sl":87},{"sl":88},{"sl":89}]},"test_96":{"methods":[{"sl":77}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [306, 226, 181, 40, 230, 25, 360, 125, 112, 242, 144, 51], [306, 226, 181, 40, 230, 25, 360, 125, 112, 242, 144, 51], [306, 226, 181, 40, 230, 25, 360, 125, 112, 242, 144, 51], [181, 40, 144], [], [306, 226, 230, 25, 360, 125, 112, 242, 51], [360], [], [306, 226, 230, 25, 125, 112, 242, 51], [], [], [], [], [], [], [184, 277, 273, 173, 235, 66, 78, 38, 54], [], [], [], [], [], [306, 181, 40, 237, 230, 25, 360, 125, 112, 242, 38, 144, 54, 51], [306, 181, 40, 237, 230, 25, 360, 125, 112, 242, 38, 144, 54, 51], [], [], [], [], [], [], [], [306, 181, 40, 230, 25, 360, 125, 112, 242, 38, 144, 51], [306, 181, 40, 230, 25, 360, 125, 112, 242, 38, 144, 51], [], [], [306, 323, 122, 181, 273, 173, 235, 40, 96, 66, 230, 142, 25, 149, 47, 78, 125, 112, 242, 144, 102, 51], [], [306, 323, 122, 181, 273, 173, 235, 40, 96, 66, 230, 142, 25, 149, 47, 78, 125, 112, 242, 144, 102, 51], [306, 323, 122, 181, 273, 173, 235, 40, 96, 66, 230, 142, 25, 149, 47, 78, 125, 112, 242, 144, 102, 51], [306, 323, 122, 181, 273, 173, 235, 40, 96, 66, 230, 142, 25, 149, 47, 78, 125, 112, 242, 144, 102, 51], [], [], [184, 277, 273, 173, 235, 66, 78, 38, 54], [], [184, 277, 273, 173, 235, 66, 78, 38, 54], [184, 277, 273, 173, 235, 66, 78, 38, 54], [184, 277, 273, 173, 235, 66, 78, 38, 54], [184, 277, 273, 173, 235, 66, 78, 38, 54], [], [], [226], [], [226], [226], [226], [226], [], [226], [], [], [226], [], [226], [], [226], [], [226], [], [226], [226], [226], [226], [226], [226], [], [], [175, 21], [], [175, 21], [], [], [], []]
