var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":135,"id":2012,"methods":[{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":64},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":82},{"el":95,"sc":2,"sl":89},{"el":105,"sc":2,"sl":98},{"el":126,"sc":2,"sl":108},{"el":133,"sc":2,"sl":129}],"name":"ItsAidSsp","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_116":{"methods":[{"sl":51},{"sl":70},{"sl":78}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":71},{"sl":79}]},"test_127":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_149":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_16":{"methods":[{"sl":98}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_173":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_175":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_184":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_188":{"methods":[{"sl":82}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_194":{"methods":[{"sl":64},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":71},{"sl":79},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_232":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_235":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_26":{"methods":[{"sl":51},{"sl":64},{"sl":70},{"sl":82},{"sl":89}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":71},{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_273":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_276":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_277":{"methods":[{"sl":64},{"sl":89}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_33":{"methods":[{"sl":64},{"sl":89}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_37":{"methods":[{"sl":51},{"sl":82}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":84},{"sl":85},{"sl":86}]},"test_372":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_385":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_47":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_54":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_66":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_67":{"methods":[{"sl":51},{"sl":98},{"sl":108}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":112},{"sl":114},{"sl":116},{"sl":117},{"sl":120},{"sl":121},{"sl":122},{"sl":124},{"sl":125}]},"test_78":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_96":{"methods":[{"sl":82}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [37, 67, 26, 116], [37, 67, 26, 116], [116], [], [37, 67, 26], [37, 67, 26], [], [], [], [], [], [], [], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [], [], [], [], [], [26, 194, 116], [26, 194, 116], [], [], [], [], [], [], [194, 116], [194, 116], [], [], [188, 372, 273, 37, 235, 96, 26, 127, 149, 47, 78], [], [188, 372, 273, 37, 235, 96, 26, 127, 149, 47, 78], [188, 372, 273, 37, 235, 96, 26, 127, 149, 47, 78], [188, 372, 273, 37, 235, 96, 26, 127, 149, 47, 78], [], [], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [277, 273, 235, 54, 232, 184, 33, 26, 194, 173, 66, 78], [], [], [], [16, 67], [], [16, 67], [16, 67], [16, 67], [16, 67], [16, 67], [], [], [], [67], [], [67], [], [67], [], [67], [], [67], [67], [], [], [67], [67], [67], [], [67], [67], [], [], [], [175, 385, 276], [], [175, 385, 276], [], [], [], []]
