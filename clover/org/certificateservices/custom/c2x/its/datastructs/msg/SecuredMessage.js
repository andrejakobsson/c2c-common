var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":217,"id":2947,"methods":[{"el":77,"sc":2,"sl":72},{"el":99,"sc":2,"sl":93},{"el":110,"sc":2,"sl":107},{"el":118,"sc":2,"sl":117},{"el":126,"sc":2,"sl":124},{"el":133,"sc":2,"sl":131},{"el":142,"sc":2,"sl":140},{"el":150,"sc":2,"sl":148},{"el":159,"sc":2,"sl":157},{"el":171,"sc":2,"sl":166},{"el":183,"sc":2,"sl":173},{"el":194,"sc":2,"sl":185},{"el":202,"sc":2,"sl":196},{"el":215,"sc":2,"sl":210}],"name":"SecuredMessage","sl":49}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":93},{"sl":117},{"sl":157}],"name":"Verify findSignatureInMessage throws exception if no signature element was found.","pass":true,"statements":[{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":158}]},"test_102":{"methods":[{"sl":72},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170}]},"test_122":{"methods":[{"sl":72},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170}]},"test_129":{"methods":[{"sl":117},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":185}],"name":"Verify deserialization","pass":true,"statements":[{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":188},{"sl":189},{"sl":191},{"sl":192},{"sl":193}]},"test_140":{"methods":[{"sl":173}],"name":"Verify serialization","pass":true,"statements":[{"sl":175},{"sl":176},{"sl":178},{"sl":179},{"sl":180},{"sl":181}]},"test_173":{"methods":[{"sl":72},{"sl":107},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166},{"sl":173},{"sl":185},{"sl":210}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":108},{"sl":109},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170},{"sl":175},{"sl":176},{"sl":178},{"sl":179},{"sl":180},{"sl":181},{"sl":188},{"sl":189},{"sl":191},{"sl":192},{"sl":193},{"sl":211},{"sl":212},{"sl":213},{"sl":214}]},"test_290":{"methods":[{"sl":72},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158}]},"test_323":{"methods":[{"sl":72},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170}]},"test_342":{"methods":[{"sl":93},{"sl":157}],"name":"Verify findSignatureInMessage returns first found signature trailer field","pass":true,"statements":[{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":158}]},"test_359":{"methods":[{"sl":173},{"sl":210}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":175},{"sl":176},{"sl":178},{"sl":179},{"sl":180},{"sl":181},{"sl":211},{"sl":212},{"sl":213},{"sl":214}]},"test_44":{"methods":[{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166}],"name":"Verify the constructors, getters and attachSignature","pass":true,"statements":[{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170}]},"test_66":{"methods":[{"sl":72},{"sl":107},{"sl":124},{"sl":131},{"sl":140},{"sl":148},{"sl":157},{"sl":166},{"sl":173},{"sl":185},{"sl":210}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":108},{"sl":109},{"sl":125},{"sl":132},{"sl":141},{"sl":149},{"sl":158},{"sl":167},{"sl":170},{"sl":175},{"sl":176},{"sl":178},{"sl":179},{"sl":180},{"sl":181},{"sl":188},{"sl":189},{"sl":191},{"sl":192},{"sl":193},{"sl":211},{"sl":212},{"sl":213},{"sl":214}]},"test_73":{"methods":[{"sl":196}],"name":"Verify toString","pass":true,"statements":[{"sl":198}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
