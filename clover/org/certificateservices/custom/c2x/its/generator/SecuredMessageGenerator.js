var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":275,"id":3134,"methods":[{"el":86,"sc":2,"sl":73},{"el":111,"sc":2,"sl":103},{"el":159,"sc":2,"sl":128},{"el":205,"sc":2,"sl":176},{"el":229,"sc":2,"sl":221},{"el":265,"sc":2,"sl":245},{"el":274,"sc":2,"sl":272}],"name":"SecuredMessageGenerator","sl":51}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":176},{"sl":272}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":178},{"sl":182},{"sl":183},{"sl":186},{"sl":187},{"sl":188},{"sl":193},{"sl":194},{"sl":195},{"sl":199},{"sl":200},{"sl":203},{"sl":273}]},"test_122":{"methods":[{"sl":103},{"sl":128},{"sl":272}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":109},{"sl":129},{"sl":133},{"sl":134},{"sl":135},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145},{"sl":148},{"sl":149},{"sl":152},{"sl":153},{"sl":157},{"sl":273}]},"test_323":{"methods":[{"sl":221},{"sl":245},{"sl":272}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":222},{"sl":223},{"sl":224},{"sl":225},{"sl":227},{"sl":247},{"sl":248},{"sl":249},{"sl":250},{"sl":251},{"sl":254},{"sl":255},{"sl":256},{"sl":258},{"sl":259},{"sl":263},{"sl":273}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
